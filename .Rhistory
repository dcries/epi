colMeans(out3w$pi)
apply(out3w$lambda,c(2,3),mean)
colMeans(out3w$beta)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
out3w = mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,5000,1500,thin=1,.2)
colMeans(out3w$pi)
apply(out3w$sds,c(2,3),mean)
apply(out3w$lambda,c(2,3),mean)
colMeans(out3w$beta)
out3w = mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,5000,1500,thin=1,.2)
colMeans(out3w$pi)
apply(out3w$sds,c(2,3),mean)
apply(out3$sds,c(2,3),mean)
apply(out3$lambda,c(2,3),mean)
apply(out3w$lambda,c(2,3),mean)
start$currentlambda
10.84^2
start <- list(currentbeta=c(10.445,   3.230,   2.033 ,0.1642,3.4081,1.4433,#0.1642,3.4081,1.4433,
0.2805, 4.4733, 1.8297,  #log tri
#65.736,   1.412,   2.121, #tri
18.388,   4.602 ,  1.389 , #bps
#.138,4.247,1.387, #log bps
-6.3, #ldl
#-0.16, #sqrt(ldl)
2.3, #bpd
-3.3 #hdl
#-.02 #log(hdl)
),
currentlambda=matrix(c(rep(101.517,K),rep(4.7228,K),rep(4.9261,K),rep(138.480,K),
rep(10.84^2,K),rep(63,K),rep(3.99,K)),ncol=K,byrow=T),
Sigmadiag=matrix(rep(c(15^2,.16^2,.24^2,36^2,18^2,14^2,16^2),K),ncol=K,byrow=FALSE),
currentzeta=sample(0:(K-1),nrow(MetS),replace=TRUE,rep(1/K,K)),
currentpi=rep(1/K,K),
propcov=diag(15)*0.00001)
out3w = mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,5000,1500,thin=1,.2)
colMeans(out3w$pi)
apply(out3w$sds,c(2,3),mean)
apply(out3$sds,c(2,3),mean)
apply(out3$lambda,c(2,3),mean)
apply(out3w$lambda,c(2,3),mean)
colMeans(out3w$beta)
out3w = mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,5000,1500,thin=1,.2)
colMeans(out3w$beta)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
out3w = mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,5000,1500,thin=1,.2)
colMeans(out3w$beta)
colMeans(out3w$pi)
apply(out3w$lambda,c(2,3),mean)
apply(out3w$sds,c(2,3),mean)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
out3w = mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,5000,1500,thin=1,.2)
colMeans(out3w$pi)
apply(out3w$sds,c(2,3),mean)
apply(out3$sds,c(2,3),mean)
colMeans(out3w$beta)
plot(out3w$beta[,1])
out3w = mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,5000,100,thin=1,.2)
colMeans(out3w$beta)
colMeans(out3w$pi)
apply(out3$sds,c(2,3),mean)
apply(out3w$sds,c(2,3),mean)
apply(out3w$lambda,c(2,3),mean)
start$currentlambda
exp(3.99)
start <- list(currentbeta=c(10.445,   3.230,   2.033 ,0.1642,3.4081,1.4433,#0.1642,3.4081,1.4433,
0.2805, 4.4733, 1.8297,  #log tri
#65.736,   1.412,   2.121, #tri
18.388,   4.602 ,  1.389 , #bps
#.138,4.247,1.387, #log bps
-6.3, #ldl
#-0.16, #sqrt(ldl)
2.3, #bpd
-3.3 #hdl
#-.02 #log(hdl)
),
currentlambda=matrix(c(rep(101.517,K),rep(4.7228,K),rep(4.9261,K),rep(138.480,K),
rep(10.84^2,K),rep(63,K),rep(exp(3.99),K)),ncol=K,byrow=T),
Sigmadiag=matrix(rep(c(15^2,.16^2,.24^2,36^2,18^2,14^2,16^2),K),ncol=K,byrow=FALSE),
currentzeta=sample(0:(K-1),nrow(MetS),replace=TRUE,rep(1/K,K)),
currentpi=rep(1/K,K),
propcov=diag(15)*0.00001)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
out3w = mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,5000,1500,thin=1,.2)
colMeans(out3w$pi)
apply(out3w$lambda,c(2,3),mean)
apply(out3$lambda,c(2,3),mean)
colMeans(out3w$beta)
plot(out3w$beta[,1])
apply(out3w$sds,c(2,3),mean)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
out3w = mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,5000,1500,thin=1,.2)
colMeans(out3w$beta)
apply(out3w$sds,c(2,3),mean)
colMeans(out3w$pi)
apply(out3$sds,c(2,3),mean)
apply(out3w$lambda,c(2,3),mean)
plot(out3w$beta[,1])
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
out3w = mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,5000,1500,thin=1,.2)
colMeans(out3w$pi)
apply(out3w$lambda,c(2,3),mean)
colMeans(out3w$beta)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
out3w = mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,5000,1500,thin=1,.2)
colMeans(out3w$pi)
apply(out3w$lambda,c(2,3),mean)
apply(out3w$sds,c(2,3),mean)
apply(out3$sds,c(2,3),mean)
colMeans(out3w$beta)
out3 = mcmc_epi_mixture_w(MetS,tstar2, start, prior,rep(1,nrow(MetS)), K,5000,1500,thin=1,.2)
colMeans(out3$pi)
colMeans(out3w$beta)
colMeans(out3$beta)
apply(out3$sds,c(2,3),mean)
apply(out3w$sds,c(2,3),mean)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
out3 = mcmc_epi_mixture_w(MetS,tstar2, start, prior,rep(1,nrow(MetS)), K,5000,1500,thin=1,.2)
out3w = mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,5000,1500,thin=1,.2)
colMeans(out3$pi)
colMeans(out3w$pi)
apply(out3w$sds,c(2,3),mean)
apply(out3$sds,c(2,3),mean)
apply(out3$lambda,c(2,3),mean)
apply(out3w$lambda,c(2,3),mean)
colMeans(out3$beta)
colMeans(out3w$beta)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,1,0,thin=1,.2)
a=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,1,0,thin=1,.2)
6.649*.265333
-4.1563*.265333
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
a=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,1,0,thin=1,.2)
a=mcmc_epi_mixture_w(MetS,tstar2, start, prior,rep(1,nrow(MetS)), K,1,0,thin=1,.2)
a=mcmc_epi_mixture_w(MetS,tstar2, start, prior,rep(1,nrow(MetS)), K,1,0,thin=1,.2)
a=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,1,0,thin=1,.2)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
a=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,2000,0,thin=1,.2)
colMeans(a$pi)
plot(a$pi[,1])
plot(a$pi[,2])
plot(a$pi[,3])
apply(a$lambda,c(2,3),mean)
plot(a$lambda[,1,1])
plot(a$lambda[,2,1])
plot(a$lambda[,7,1])
plot(a$lambda[,7,2])
plot(a$lambda[,7,3])
apply(a$sds,c(2,3),mean)
plot(a$sds[,7,1])
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
a=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,2000,0,thin=1,.2)
colMeans(a$pi)
apply(a$sds,c(2,3),mean)
apply(a$lambda,c(2,3),mean)
summary(weights)
head(weights)
head(a$lambda[,,1])
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
a=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,1000,0,thin=1,.2)
colMeans(a$pi)
head(a$lambda[,,2])
head(a$sds[,,2])
plot(a$sds[,1,2])
head(a$sds[,,2],10)
head(a$lambda[,,2],10)
head(a$pi,10)
tail(a$pi,10)
a=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,2000,1000,thin=1,.2)
colMeans(a$pi)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
a2=mcmc_epi_mixture_w(MetS,tstar2, start, prior,rep(1,nrow(MetS)), K,2000,1000,thin=1,.2)
colMeans(a2$pi)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
a3=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,20,0,thin=1,.2)
tail(a3$pi)
head(a3$pi)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
a3=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,1000,0,thin=1,.2)
colMeans(a3$pi)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
a3=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,2000,1000,thin=1,.2)
colMeans(a3$pi)
plot(a3$pi[,1])
colMeans(a3$beta)
a3=mcmc_epi_mixture_w(MetS,tstar2, start, prior,rep(1,nrow(MetS)), K,2000,1000,thin=1,.2)
colMeans(a3$beta)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
a3=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,2000,1000,thin=1,.2)
colMeans(a3$beta)
colMeans(a3$pi)
apply(a3$lambda,c(2,3),mean)
a3=mcmc_epi_mixture_w(MetS,tstar2, start, prior,rnorm(nrow(MetS),50,5), K,2000,1000,thin=1,.2)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
a3=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,2000,1000,thin=1,.2)
colMeans(a3$pi)
colMeans(a3$beta)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
a3=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,2000,1000,thin=1,.2)
colMeans(a3$pi)
colMeans(a3$beta)
a3=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,2000,1000,thin=1,.2)
colMeans(a3$beta)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
a3=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,2000,1000,thin=1,.2)
colMeans(a3$pi)
colMeans(a3$beta)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
a3=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,2000,1000,thin=1,.2)
colMeans(a3$pi)
colMeans(a3$beta)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
a3=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,2,0,thin=1,.2)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
a3=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,2000,1000,thin=1,.2)
colMeans(a3$pi)
plot(a3$pi[,1])
colMeans(a3$beta)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
a3=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,2000,1000,thin=1,.2)
colMeans(a3$pi)
colMeans(a3$beta)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
a3=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,2000,1000,thin=1,.2)
colMeans(a3$pi)
colMeans(a3$beta)
a3=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,2000,1000,thin=1,.2)
colMeans(a3$beta)
colMeans(a3$pi)
table(a3$zeta[500,])
table(a3$zeta[5,])
table(a3$zeta[1,])
dim(a3$zeta)
table(a3$zeta[2,])
table(a3$zeta[4,])
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
a3=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,5,0,thin=1,.2)
table(a3$zeta[5,])
a3=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,500,0,thin=1,.2)
Rcpp::sourceCpp('mcmc_epi_mixture_w.cpp')
a3=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,2000,1000,thin=1,.2)
colMeans(a3$beta)
colMeans(a3$piu)
colMeans(a3$pi)
a3=mcmc_epi_mixture_w(MetS,tstar2, start, prior,weights, K,2000,1000,thin=1,.2)
colMeans(a3$pi)
colMeans(a3$beta)
3.4^4
plot(60:159,fy[,1],type="l");lines(60:159,fy2[,1],col=2)
dim(MetS)
?rank
rank(MetS[,1])
1/(nrow(MetS)*rank(MetS[,1])
1/(nrow(MetS))*rank(MetS[,1])
head(1/(nrow(MetS))*rank(MetS[,1]))
head(MetS[,1])
plot(60:159,fy[,1]/nrow(MetS),type="l");lines(60:159,fy2[,1]/nrow(MetS),col=2)
quantile(fy[,1]/nrow(MetS),probs=head(1/(nrow(MetS))*rank(MetS[,1])))
quantile(fy[,1],probs=head(1/(nrow(MetS))*rank(MetS[,1])))
head(1/(nrow(MetS))*rank(MetS[,1]))
summary(fy[,1])
head(1/(nrow(MetS))*(rank(MetS[,1])-0.5))
quantile(MetS[,1],probs=head(1/(nrow(MetS))*rank(MetS[,1])))
head(MetS[,1])
summary(MetS[,1]-quantile(MetS[,1],probs=(1/(nrow(MetS))*rank(MetS[,1]))))
a=quantile(fy[,1],probs=(1/(nrow(MetS))*rank(MetS[,1]))))
a=quantile(fy[,1],probs=(1/(nrow(MetS))*rank(MetS[,1])))
head(a)
head(MetS[,1])
b=sort(MetS[,1])
head(b)
b=sort(MetS[,1])[round(a)]
head(b)
head(MetS[,1])
(1/(nrow(MetS))*rank(MetS[,1]))
a=quantile(fy[,1]/nrow(MetS),probs=(1/(nrow(MetS))*rank(MetS[,1])))
head(a)
a=quantile(fy[,1],probs=(1/(nrow(MetS))*rank(MetS[,1])))
head(a)
load("C:/Users/dcries/workspace/stanout_mix5w2.RData")
colMeans(out5w$pi)
colMeans(out5w$beta)
load("C:/Users/dcries/workspace/stanout_realmix3w.RData")
colMeans(out3w$pi)
colMeans(out3w$beta)
qnorm(0.5)
a=quantile(fy[,1],probs=(1/(nrow(MetS))*rank(MetS[,1])))
head*a
head(a)
head(fy)
head(a)
head(rank(MetS[,1]))
head(fy[,1])
(1/(nrow(MetS))*(rank(MetS[,1])-0.5))
head((1/(nrow(MetS))*(rank(MetS[,1])-0.5)))
fy[10:20,1]/nrow(MetS)
head(MetsS[,1])
head(MetS[,1])
a=fy[,1]/nrow(MetS[,1])
b=(1/(nrow(MetS))*(rank(MetS[,1])-0.5))
temp=a[sapply(b,function(x) which.min(abs(x-a)))]
temp=b[sapply(a,function(x) which.min(abs(x-a)))]
class(a)
class(b)
a <-c(1,5,8,15,32,69)
b <-c(8.5,33)
temp=a[sapply(b,function(x) which.min(abs(x-a)))]
temp
fy <- rep(0,10000)#matrix(0,ncol=7,nrow=100)
fy <- rep(0,10000)#matrix(0,ncol=7,nrow=100)
fy2 <- matrix(0,ncol=7,nrow=100)
x <- seq(from=60,to=160,length.out = 10000)
for(i in 1:10000){
#for(j in 1:7){
fy[i,]=sum(weights*(MetS[,1] <= (x[i])))
#fy2[i,j]=sum((MetS[,j] <= (i+59)))
#}
}
fy <- rep(0,10000)#matrix(0,ncol=7,nrow=100)
fy2 <- matrix(0,ncol=7,nrow=100)
x <- seq(from=60,to=160,length.out = 10000)
for(i in 1:10000){
#for(j in 1:7){
fy[i]=sum(weights*(MetS[,1] <= (x[i])))
#fy2[i,j]=sum((MetS[,j] <= (i+59)))
#}
}
head(fy)
tail(fy)
length(weights)
a=fy/nrow(MetS)
b=(1/(nrow(MetS))*(rank(MetS[,1])-0.5)))
temp=a[sapply(b,function(x) which.min(abs(x-a)))]
class(temp)
length(temp)
temp
a=fy/nrow(MetS)
head(a)
b=(1/(nrow(MetS))*(rank(MetS[,1])-0.5)))
b=(1/(nrow(MetS))*(rank(MetS[,1])-0.5))
temp=a[sapply(b,function(x) which.min(abs(x-a)))]
length(temp)
head(temp)
head(b)
head(a)
q=c(1,2,3,4)
q=rnorm(5)
which.min(q)
q
temp=sapply(b,function(x) which.min(abs(x-a)))
head(temp)
head(x[temp])
head(MetS[,1])
plot(MetS[,1],x[temp])
head(MetS)
fy <- matrix(0,ncol=7,nrow=10000)
xwaist <- seq(from=min(waist),to=max(waist),length.out = 10000)
xglu <- seq(from=min(lglu),to=max(lglu),length.out = 10000)
xtri <- seq(from=min(ltri),to=max(ltri),length.out = 10000)
xbps <- seq(from=min(bps),to=max(bps),length.out = 10000)
xbpd <- seq(from=min(bpd),to=max(bpd),length.out = 10000)
xldl <- seq(from=min(ldl),to=max(ldl),length.out = 10000)
xhdl <- seq(from=min(hdl),to=max(hdl),length.out = 10000)
xfull <- cbind(xwaist,xglu,xtri,xbps,xldl,xbpd,xhdl)
for(i in 1:10000){
for(j in 1:7){
fy[i,j]=sum(weights*(MetS[,j] <= (x[,j])))
}
}
fy <- matrix(0,ncol=7,nrow=10000)
xwaist <- seq(from=min(waist),to=max(waist),length.out = 10000)
xglu <- seq(from=min(lglu),to=max(lglu),length.out = 10000)
xtri <- seq(from=min(ltri),to=max(ltri),length.out = 10000)
xbps <- seq(from=min(bps),to=max(bps),length.out = 10000)
xbpd <- seq(from=min(bpd),to=max(bpd),length.out = 10000)
xldl <- seq(from=min(ldl),to=max(ldl),length.out = 10000)
xhdl <- seq(from=min(hdl),to=max(hdl),length.out = 10000)
xfull <- cbind(xwaist,xglu,xtri,xbps,xldl,xbpd,xhdl)
for(i in 1:10000){
for(j in 1:7){
fy[i,j]=sum(weights*(MetS[,j] <= (xfull[,j])))
}
}
warnings()
dim(xfull)
i=1
j=1
fy[i,j]=sum(weights*(MetS[,j] <= (xfull[,j])))
(MetS[,j] <= (xfull[,j])
((MetS[,j] <= (xfull[,j]))
fy <- matrix(0,ncol=7,nrow=10000)
xwaist <- seq(from=min(waist),to=max(waist),length.out = 10000)
xglu <- seq(from=min(lglu),to=max(lglu),length.out = 10000)
xtri <- seq(from=min(ltri),to=max(ltri),length.out = 10000)
xbps <- seq(from=min(bps),to=max(bps),length.out = 10000)
xbpd <- seq(from=min(bpd),to=max(bpd),length.out = 10000)
xldl <- seq(from=min(ldl),to=max(ldl),length.out = 10000)
xhdl <- seq(from=min(hdl),to=max(hdl),length.out = 10000)
xfull <- cbind(xwaist,xglu,xtri,xbps,xldl,xbpd,xhdl)
for(i in 1:10000){
for(j in 1:7){
fy[i,j]=sum(weights*(MetS[,j] <= (xfull[i,j])))
}
}
plot(xwaist,fy[,1]/nrow(MetS),type="l");lines(xwaist,fy2[,1]/nrow(MetS),col=2)
fy <- matrix(0,ncol=7,nrow=10000)
fy2 <- matrix(0,ncol=7,nrow=10000)
xwaist <- seq(from=min(waist),to=max(waist),length.out = 10000)
xglu <- seq(from=min(lglu),to=max(lglu),length.out = 10000)
xtri <- seq(from=min(ltri),to=max(ltri),length.out = 10000)
xbps <- seq(from=min(bps),to=max(bps),length.out = 10000)
xbpd <- seq(from=min(bpd),to=max(bpd),length.out = 10000)
xldl <- seq(from=min(ldl),to=max(ldl),length.out = 10000)
xhdl <- seq(from=min(hdl),to=max(hdl),length.out = 10000)
xfull <- cbind(xwaist,xglu,xtri,xbps,xldl,xbpd,xhdl)
for(i in 1:10000){
for(j in 1:7){
fy[i,j]=sum(weights*(MetS[,j] <= (xfull[i,j])))
fy2[i,j]=sum((MetS[,j] <= (xfull[i,j])))
}
}
plot(xfull[,1],fy[,1]/nrow(MetS),type="l");lines(xfull[,1],fy2[,1]/nrow(MetS),col=2)
plot(xfull[,2],fy[,2]/nrow(MetS),type="l");lines(xfull[,2],fy2[,2]/nrow(MetS),col=2)
plot(xfull[,3],fy[,3]/nrow(MetS),type="l");lines(xfull[,3],fy2[,3]/nrow(MetS),col=2)
plot(xfull[,4],fy[,4]/nrow(MetS),type="l");lines(xfull[,4],fy2[,4]/nrow(MetS),col=2)
plot(xfull[,5],fy[,5]/nrow(MetS),type="l");lines(xfull[,5],fy2[,5]/nrow(MetS),col=2)
plot(xfull[,6],fy[,6]/nrow(MetS),type="l");lines(xfull[,6],fy2[,6]/nrow(MetS),col=2)
plot(xfull[,7],fy[,7]/nrow(MetS),type="l");lines(xfull[,7],fy2[,7]/nrow(MetS),col=2)
dim(xfull)
xwaist
plot(xfull[,1],fy[,1]/nrow(MetS),type="l");lines(xfull[,1],fy2[,1]/nrow(MetS),col=2)
plot(xfull[,4],fy[,4]/nrow(MetS),type="l");lines(xfull[,4],fy2[,4]/nrow(MetS),col=2)
plot(xfull[,5],fy[,5]/nrow(MetS),type="l");lines(xfull[,5],fy2[,5]/nrow(MetS),col=2)
plot(xfull[,6],fy[,6]/nrow(MetS),type="l");lines(xfull[,6],fy2[,6]/nrow(MetS),col=2)
plot(xfull[,7],fy[,7]/nrow(MetS),type="l");lines(xfull[,7],fy2[,7]/nrow(MetS),col=2)
fy[3000:3010,1]
ncdf <- 5000
fy <- matrix(0,ncol=7,nrow=ncdf)
fy2 <- matrix(0,ncol=7,nrow=ncdf)
xwaist <- seq(from=min(waist),to=max(waist),length.out = ncdf)
xglu <- seq(from=min(lglu),to=max(lglu),length.out = ncdf)
xtri <- seq(from=min(ltri),to=max(ltri),length.out = ncdf)
xbps <- seq(from=min(bps),to=max(bps),length.out = ncdf)
xbpd <- seq(from=min(bpd),to=max(bpd),length.out = ncdf)
xldl <- seq(from=min(ldl),to=max(ldl),length.out = ncdf)
xhdl <- seq(from=min(hdl),to=max(hdl),length.out = ncdf)
xfull <- cbind(xwaist,xglu,xtri,xbps,xldl,xbpd,xhdl)
for(i in 1:ncdf){
for(j in 1:7){
fy[i,j]=sum(weights*(MetS[,j] <= (xfull[i,j])))
fy2[i,j]=sum((MetS[,j] <= (xfull[i,j])))
}
}
plot(xfull[,1],fy[,1]/nrow(MetS),type="l");lines(xfull[,1],fy2[,1]/nrow(MetS),col=2)
plot(xfull[,2],fy[,2]/nrow(MetS),type="l");lines(xfull[,2],fy2[,2]/nrow(MetS),col=2)
plot(xfull[,3],fy[,3]/nrow(MetS),type="l");lines(xfull[,3],fy2[,3]/nrow(MetS),col=2)
plot(xfull[,4],fy[,4]/nrow(MetS),type="l");lines(xfull[,4],fy2[,4]/nrow(MetS),col=2)
plot(xfull[,5],fy[,5]/nrow(MetS),type="l");lines(xfull[,5],fy2[,5]/nrow(MetS),col=2)
plot(xfull[,6],fy[,6]/nrow(MetS),type="l");lines(xfull[,6],fy2[,6]/nrow(MetS),col=2)
plot(xfull[,7],fy[,7]/nrow(MetS),type="l");lines(xfull[,7],fy2[,7]/nrow(MetS),col=2)
MetSadj <- matrix(0,nrow=nrow(MetS),ncol=ncol(MetS))
for(i in 1:7){
empcdf <- fy[,i]/nrow(MetS)
probs <- (1/(nrow(MetS))*(rank(MetS[,i])-0.5))
MetSadj[,i] <- sapply(probs,function(x) which.min(abs(x-empcdf)))
}
plot(MetS[,1],MetSadj[,1])
plot(MetS[,2],MetSadj[,2])
plot(MetS[,3],MetSadj[,3])
plot(MetS[,4],MetSadj[,4])
MetSadj <- matrix(0,nrow=nrow(MetS),ncol=ncol(MetS))
for(i in 1:7){
empcdf <- fy[,i]/nrow(MetS)
probs <- (1/(nrow(MetS))*(rank(MetS[,i])-0.5))
MetSadj[,i] <- xfull[sapply(probs,function(x) which.min(abs(x-empcdf)))]
}
plot(MetS[,1],MetSadj[,1])
plot(MetS[,4],MetSadj[,4])
plot(MetS[,1],MetSadj[,1])
plot(MetS[,2],MetSadj[,2])
MetSadj <- matrix(0,nrow=nrow(MetS),ncol=ncol(MetS))
for(i in 1:7){
empcdf <- fy[,i]/nrow(MetS)
probs <- (1/(nrow(MetS))*(rank(MetS[,i])-0.5))
MetSadj[,i] <- xfull[sapply(probs,function(x) which.min(abs(x-empcdf))),i]
}
plot(MetS[,1],MetSadj[,1])
lm(MetS[,1]~MetSadj[,1])
lm(MetS[,2]~MetSadj[,2])
lm(MetS[,3]~MetSadj[,3])
lm(MetS[,4]~MetSadj[,4])
lm(MetS[,5]~MetSadj[,5])
plot(MetS[,5],MetSadj[,5])
plot(MetS[,6],MetSadj[,6])
lm(MetS[,6]~MetSadj[,6])
lm(MetS[,7]~MetSadj[,7])
plot(MetS[,7],MetSadj[,7])
head(MetS)
source('C:/Users/dcries/github/epi/MetS_adj_weight.R')
a=MetS_adj_weight(MetS)
plot(MetS[,1],a[,1])
plot(MetS[,3],a[,3])
source('C:/Users/dcries/github/epi/MetS_adj_weight.R')
load("C:/Users/dcries/workspace2/stanout_mix5.RData")
colMeans(out5$pi)
colMeans(out5$beta)
apply(out5$sds,c(2,3),mean)
apply(out5$lambda,c(2,3),mean)
